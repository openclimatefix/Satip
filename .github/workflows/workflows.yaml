name: Python package

on: [push]

jobs:
  run-python-tests:
    strategy:
      matrix:
        python-version: ["3.9"]
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Do some macOS specific installs for Python 3.9
        run: |
          brew install c-blosc hdf5
        if: matrix.os == 'macos-latest'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-xdist
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install git+https://github.com/SheffieldSolar/PV_Live-API
          if [ -f "setup.py" ]; then pip install -e .; else export PYTHONPATH=$PYTHONPATH:./src; fi
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
      - name: Setup with pytest-xdist
        run: |
          # lets get the string for how many cpus to use with pytest
          echo "Will be using 2 cpus for pytest testing"
          #
          # make PYTESTXDIST
          export PYTESTXDIST="-n 2"
          if [ 2 -gt 0 ]; then export PYTESTXDIST="$PYTESTXDIST --dist=loadfile"; fi
          #
          # echo results and save env var for other jobs
          echo "pytest-xdist options that will be used are: $PYTESTXDIST"
          echo "PYTESTXDIST=$PYTESTXDIST" >> $GITHUB_ENV
      - name: Setup with pytest-cov
        run: |
          # let make pytest run with coverage
          echo "Will be looking at coverage of dir  ${{ inputs.pytest_cov_dir }}"
          #
          # install pytest-cov
          pip install coverage==6.2 # https://github.com/nedbat/coveragepy/issues/1312
          pip install pytest-cov
          #
          # make PYTESTCOV
          export PYTESTCOV="--cov=satip --cov-report=xml"
          #
          # echo results and save env var for other jobs
          echo "pytest-cov options that will be used are: $PYTESTCOV"
          echo "PYTESTCOV=$PYTESTCOV" >> $GITHUB_ENV
      - name: Run pytest
        run: |
          export EUMETSAT_USER_KEY="${{ secrets.EUMETSAT_USER_KEY }}"
          export EUMETSAT_USER_SECRET="${{ secrets.EUMETSAT_USER_SECRET }}"
          export PYTEST_COMMAND="pytest $PYTESTCOV $PYTESTXDIST -s"
          echo "Will be running this command: $PYTEST_COMMAND"
          eval $PYTEST_COMMAND
      - name: Show coverage
        run: coverage report -m
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
